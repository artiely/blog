(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{411:function(s,a,n){"use strict";n.r(a);var e=n(6),t=Object(e.a)({},function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p",[s._v("我们可能很少在编程中用位运算，如果没深入学习，可能也很难理解。平时的数值运算，其实是要先转换成二进制再进行运算的，而位运算就是直接进行二进制运算，所以位运算的执行效率肯定是更高的。下面通过一些实例来加深对位运算的理解。")]),s._v(" "),n("h1",{attrs:{id:"js-常规位运算理解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#js-常规位运算理解","aria-hidden":"true"}},[s._v("#")]),s._v(" js 常规位运算理解")]),s._v(" "),n("h2",{attrs:{id:"按位与"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#按位与","aria-hidden":"true"}},[s._v("#")]),s._v(" 按位与(&)")]),s._v(" "),n("p",[s._v("&&运算符我们都知道，只有两个都为真，结果才为真。&道理是一样的，只有两个数的值为 1 时，才返回 1。例如 1 和 3 的按位与操作：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("                    0001\n                 &  0011\n                ---------\n                    0001\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("只有对应的数为 1 时，结果才为 1，其他都为 0。\n判断一个数是奇数还是偶数，我们会用求余数来判断：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('function assert(n) {\n        if (n % 2 === 1) {\n    console.log("n是奇数");\n    } else {\n    console.log("n是偶数");\n   }\n}\n\nassert(3); // "n是奇数"\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("我们也可以用一个数和 1 进行按位&操作来判断，而且速度更快：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('function assert(n) {\nif (n & 1) {\n    console.log("n是奇数");\n} else {\n    console.log("n是偶数");\n}\n}\n\nassert(3); // "n是奇数"\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("下面是位运算过程：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("                 1 = 0001\n                 3 = 0011\n                 --------\n                     & = 0001\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("奇数的二进制码的最后一位数肯定是 1，而 1 只有最后一位为 1，按位&操作之后，结果肯定只有最后一位数为 1。而偶数的二进制表示的最后一位数是 0，和 1 进行按位&操作，结果所有位数都为 0。")]),s._v(" "),n("h2",{attrs:{id:"按位或"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#按位或","aria-hidden":"true"}},[s._v("#")]),s._v(" 按位或(|)")]),s._v(" "),n("p",[s._v("|与||操作符的道理也是一样的，只要两个数中有一个数为 1，结果就为 1，其他则为 0。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("                    0001\n                 |  0011\n                ---------\n                    0011\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("对浮点数向下求整，我们会用下面的方法：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var num = Math.floor(1.1); // 1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("我们也可以用位运算来求整：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var num = 1.1 | 0; // 1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("其实浮点数是不支持位运算的，所以会先把 1.1 转成整数 1 再进行位运算，就好像是对浮点数向下求整。所以 1|0 的结果就是 1。")]),s._v(" "),n("h2",{attrs:{id:"按位非"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#按位非","aria-hidden":"true"}},[s._v("#")]),s._v(" 按位非(~)")]),s._v(" "),n("p",[s._v("按位非就是求二进制的反码：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var num = 1; // 二进制 00000000000000000000000000000001\nvar num1 = ~num; // 二进制 11111111111111111111111111111110\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("我们知道，js 中的数字默认是有符号的。有符号的 32 位二进制的最高位也就是第一位数字代表着正负，1 代表负数，0 代表整数。那到底 11111111111111111111111111111110 等于多少呢？最高位为 1 代表负数，负数的二进制转化为十进制：符号位不变，其他位取反加 1。取反之后为 10000000000000000000000000000001，加 1 之后为 10000000000000000000000000000010，十进制为-2。")]),s._v(" "),n("h2",{attrs:{id:"按位异或"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#按位异或","aria-hidden":"true"}},[s._v("#")]),s._v(" 按位异或(^)")]),s._v(" "),n("p",[s._v("按位异或是两个数中只有一个 1 时返回 1，其他情况返回 0。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("                    0001\n                 ^  0011\n                ---------\n                    0010\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("数字与数字本身按位异或操作得到的是 0，因为每两个对应的数字都相同，所以最后返回的都是 0。")]),s._v(" "),n("p",[s._v("我们经常会需要调换两个数字的值：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var num1 = 1, num2 = 2, temp;\ntemp = num1;\nnum1 = num2; // 2\nnum2 = temp; // 1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("如果装逼一点的话，可以这样：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var num1 = 1, num2 = 2;\nnum1 = [num2, num2 = num1][0];\nconsole.log(num1); // 2\nconsole.log(num2); // 1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("如果想再装的稳一点的话，可以这样：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var num1 = 1, num2 = 2;\nnum1 ^= num2; // num1 = num1 ^ num2 = 1 ^ 2 = 3\nnum2 ^= num1; // num2 = num2 ^ (num1 ^ num2) = 2 ^ (1 ^ 2) = 1\nnum1 ^= num2; // num1 = num1 ^ num2 = 3 ^ 1 = 2\nconsole.log(num1); // 2\nconsole.log(num2); // 1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h2",{attrs:{id:"有符号左移"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#有符号左移","aria-hidden":"true"}},[s._v("#")]),s._v(" 有符号左移(<<)")]),s._v(" "),n("p",[s._v("有符号左移会将 32 位二进制数的所有位向左移动指定位数。如：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var num = 2; // 二进制10\nnum = num << 5; // 二进制1000000，十进制64\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("如果要求 2 的 n 次方，可以这样：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("function power(n) {\n    return 1 << n;\n}\n\npower(5); // 32\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("1 的二进制是 01，左移 5 位就是 0100000，十进制就是 2 的 5 次方 32。")]),s._v(" "),n("h2",{attrs:{id:"有符号右移"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#有符号右移","aria-hidden":"true"}},[s._v("#")]),s._v(" 有符号右移(>>)")]),s._v(" "),n("p",[s._v("有符号右移会将 32 位二进制数的所有位向右移动指定位数。如：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var num = 64; // 二进制1000000\nnum = num >> 5; // 二进制10，十进制2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("求一个数的二分之一：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var num = 64 >> 1; // 32\nvar num = 5 >> 1; // 2 小数同样会向下取整\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("有符号左移与右移不会影响符号位。")]),s._v(" "),n("h2",{attrs:{id:"无符号右移"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#无符号右移","aria-hidden":"true"}},[s._v("#")]),s._v(" 无符号右移(>>>)")]),s._v(" "),n("p",[s._v("正数的无符号右移与有符号右移结果是一样的。负数的无符号右移会把符号位也一起移动，而且无符号右移会把负数的二进制码当成正数的二进制码：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var num = -64; // 11111111111111111111111111000000\nnum = num >>> 5; // 134217726\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("所以，我们可以利用无符号右移来判断一个数的正负：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("function isPos(n) {\nreturn (n === (n >>> 0)) ? true : false;\n}\n\nisPos(-1); // false\nisPos(1); // true\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("-1>>>0 虽然没有向右移动位数，但-1 的二进制码已经变成了正数的二进制码：")]),s._v(" "),n("p",[s._v("11111111111111111111111111111111\n所以-1>>>0 的值为 4294967295。")]),s._v(" "),n("h2",{attrs:{id:"总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),n("p",[s._v("以上的例子在平常可能会比较容易用到或看到，也是属于比较容易理解的。一些比较复杂的、难理解的，我觉得应该尽量少用，因为会给阅读者带来困难，也会给自己带来麻烦。")]),s._v(" "),n("h2",{attrs:{id:"例题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#例题","aria-hidden":"true"}},[s._v("#")]),s._v(" 例题")]),s._v(" "),n("p",[s._v("判断一个字符串是否是镜像字符串 如：abcba")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("function mirror (str) {\n  const length = str.length >> 1\n  for (let i = 0; i < length; i++) {\n    if (str[i] !== str[str.length - 1 - i]) return false\n  }\n  rturn true\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])])])},[],!1,null,null,null);a.default=t.exports}}]);